
项目文件概述：

1,client文件夹
   包含配合服务器进行测试的所有下位机程序
    1）pic_send_client.py     实现图片和视频传输的客户机程序,改变开始的model参数，可以使服务器工作在不同的条件下。


2,demo文件夹
   存储那些觉得以后会改得更好，但是又害怕修改失败的程序文件
   1）twsited_tcp_server.py   一个曾经可以实现接收图片和视频的服务器程序


3,forUser 文件夹
   包含许多使用说明，参考文献的说明性文档的文件夹，其中文件作用一目了然

4,images文件夹
  用于储存服务器受到的图片数据

5,video文件夹
   用于储存服务器接收到的视频数据

6,server文件夹
   包括了最主要的程序，以及辅助文件，具体：
   1）faceDataset文件夹   储存人脸识别数据集，里面有许多子文件夹，以人物名字命名，每个子文件夹下面包括每个人的十张左右图片，其命名规则，见《人脸识别使用说明文档》
   2）faceImages文件夹    储存用于构建人脸识别数据集的人物图片，其使用详细见《人脸识别使用说明文档》
   3）haarcascades文件夹，里面全市xml文件，这些文件是物体检测分类器的训练结果，在程序中有引用，不得轻易移动和进行相关操作，一般只需要关注其名字，无需关注内容本身
   4）xmlfile文件夹   里面包含了人脸识别分类器的训练结果，以及人脸识别标签姓名映射文件，微信access_token和微信多媒体文件和media_id存储文件，不需要进行任何操作
   5）python程序文件
       (a)cascadeClassfier.py   包含三个用于物体检测的类，包括上半身，下半身，人脸，眼睛，鼻子和嘴的检测，一般而言调用小的类，实例化的时候速度快
       (b)faceDatasetTest.py    可以测试准备的数据集，总共多少，用于识别之后的正确率,用一半的图片进行训练，一半的图片测试，可以判断数据集效果
       (c)imageFunction.py      包含了很多用于图片处理的函数   包括静止物体监控，寻找物体轮廓，avi转换为mp4文件，读取OpenCV图片文件  图片初步处理等函数
       (d)main.py              服务器程序，当训练好模型之后，秩序运行此程序，便可开始对下位机上传图片进行处理
       (e)mychat.py            微信模块文件，可以调用，需要时梨花相关的类，有使用例子
       (f)testImageWithFace.py 可以单独运行，用于测是构建人脸数据集的人物图片效果（能不能找到脸，脸图如何）
       (g)trainFaceRecognizerModel.py  由准备好的人脸图片集进行测试，生成模型文件保存在4）文件夹中，具体见《人脸识别使用说明文档》
       (h)updateFaceDataset.py    由选定的人物图片生成人脸数据集  具体见《人脸识别使用说明文档》
       (i)weixin.py            由许多微信相关函数组成的文件夹，其内容大致与mychat.py 相同
       (j)getFaceImageWithCapture.py  使用笔记本电脑的摄像头采集人物的脸谱图，需要更改人物的名字，每个人采集十张,并将图片保存为灰度图存于原始图片集capture/server/faceImages中
       

     
      
