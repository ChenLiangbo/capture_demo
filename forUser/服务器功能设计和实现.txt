服务器构架
1,简单的保存图片，为航拍而设计

2,简单的保存视频，为航拍视频而设计

3,静止物体的监控，，物品防盗，微信通知

4,拍摄到的图片中找人，找到人后微信通知

5,人脸识别，人脸识别，打卡签到


由上面的模块，服务器的工作可以暂时分为五个工作模式，每个模式的协议分别如下所述：
以后可以画出服务器和客户机交互的流程图。
客户机：(model)---等待确认---（start)---(二进制字节流)---(end)---等待确认---（start）---... ...，
服务器：比较复杂,最主要的就是，服务器是根据接收到的数据内容来判断所有的工作的

对应与下位机配合协议
为了使下位机的编程变得简单一些，以下的几个工作模式基本上相同，惟一的不同是，在正式进入工作之前，需要将自己的工作模式发送到服务器，之后就是单一的一帧一帧的发送图片，一帧一帧的图片传输协议详细如1。
工作模式标志，简单图片（model1），简单视频上传（model2），静止物体监控（model3），图片中找人（model4），人脸识别（model5），这些标志都只能是字符串的数据格式
1,简单图片
  在正式开始传输图片之前，客户机向服务器发送一个标志，"model1",服务器正确返回字符型数据（1），错误返回字符型数据（0），当下位机开始接收到（1）时，向服务器发送图片开始字符串数据(start)，此时服务器不做出应答，然后客户机开始以二进制字节流的数据形式向服务器发送图片，当图片数据发送结束后，客户机需要向服务器发送字符串标志（end）。在此表示客户机一张图片发送完成。然后等待服务器的回复，当收当（1）时，表示可以继续发送下一张图片
  对于服务器，在类SimpleProtocol中，定义变量isImage初始值False,开始接收到字符串(model1)时，将isImage赋值为True，，当接收到("start")时，开始判断isImage，若是，则开始准备接收文件，以后将二进制文件链接起来储存在自己属性中，当接收到字符串（"end“）时，将字节数据以相应的文件名存在本地文件夹capture/image下，，并向客户机发送确认字符串（1），至此，一次图片交互完成。
经过自己编写的测试，基本上都没问题，在本地没有出现数据丢失的情况

2，简单视频传输
  视频是以图片的形式一帧一帧的发送。在发送视频之前，客户机向服务器发送（model2），服务器收到此消息后，发送（1）表示可以继续，之后就是按照图片的发送方式，（start）---（二进制字节)---(end)，每发送完（end），就等待服务器的确认信号（1），收到确认信号之后表示可以继续发送下一张照片
  服务器收到（model1）时，初始化储存视频的类，（此处存在一个明显缺陷，有待改进，初始化类的时候必须输入以后每帧图片的大小，如果错了，会报错），可以优化，将大小不一样的图片转换为标准的适合储存的（640,480）大小，之后接收图片，收到(end)之后，将图片大小进行调整，然后存入视频输出类中。在断开链接的时候释放视频输出类空间。

3,静止物体报警
  客户机惟一的不同就是在开始的时候将服务器的模式设置，变为发送字符串（model3)，之后还是完全一样
  工作在此模式下的服务器，需要额外一些变量来存储所需要的信息，同时将每一帧图片经过查找轮廓的函数处理，分析后得出轮廓，如果不是第一帧，那么就需要计算出图片轮廓移动的距离，当局里比设置的报警临界值大，就触发报警函数。触发的重心变化临界值需需要根据具体的监控情况来确定报警触发时，图片的轮廓重心移动的距离，这个需要时级不断的测试。服务器报警逻辑，当发现移动开始，记录移动发生开始的视频，记录一定的帧数，然后通过微信将视频发送出去，这个比较麻烦。

4,图片中找人
  客户机，开始发淞图片之前发送模式设置字符串(model4),(model4)---等待确认---（start）---（二进制字节数据）---（end）---等待确认---继续，模式发送
  服务器，服务器首先得保证接收到这张图片，然后使用图片中找人的函数进行查找，当找到人后，把附近的几张照片连接成一段视频，通过微信发送出去

5,人脸识别
  客户机   (model5)---等待确认---（start)---(二进制字节流)---(end)---等待确认---（start）---... ...
  服务器，接收到model5时，需要设置服务器工作在人脸识别的状态，也就是开始的时候发送的模式类型，之后就是接收到图片之后，在图片中找到人脸，如果找到了，对其进行识别，识别的结果通过微信发送出去。

此服务器，可以对拍摄到的图片进行许多处理，完成了基本上预期的所有功能，虽然在人脸识别准确度，寻找人物视频发送的算法，当发送微信视频消息的时候会出现一定的延迟，接收到的图片尺寸太小方面还存在一定的问题需要去解决。


